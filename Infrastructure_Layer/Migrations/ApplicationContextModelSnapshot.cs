// <auto-generated />
using System;
using Infrastructure_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure_Layer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain_Layer.Entities.MealPlan", b =>
                {
                    b.Property<int>("MealPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPlanId"));

                    b.Property<string>("MealPlanName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MealPlanId");

                    b.ToTable("MealPlans", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.MealPlanSeason", b =>
                {
                    b.Property<int>("MealPlanSeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPlanSeasonId"));

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerAdult")
                        .HasColumnType("MONEY");

                    b.Property<decimal>("RatePerChild")
                        .HasColumnType("MONEY");

                    b.Property<DateTime>("SeasonEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SeasonStart")
                        .HasColumnType("datetime");

                    b.HasKey("MealPlanSeasonId");

                    b.HasIndex("MealPlanId");

                    b.ToTable("MealPlanSeaons", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime");

                    b.Property<string>("GuestName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<decimal>("MealPlanCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NoOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReservationGuid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ReservationNo")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RoomCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReservationId");

                    b.HasIndex("MealPlanId");

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("AdultsCapcity")
                        .HasColumnType("int");

                    b.Property<int>("ChildrenCapcity")
                        .HasColumnType("int");

                    b.Property<int>("RoomNo")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.RoomSeason", b =>
                {
                    b.Property<int>("RoomSeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomSeasonId"));

                    b.Property<decimal>("RatePerRoom")
                        .HasColumnType("MONEY");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SeasonEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("SeasonStart")
                        .HasColumnType("datetime");

                    b.HasKey("RoomSeasonId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomSeasons", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes", (string)null);
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("RoomListRoomId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "RoomListRoomId");

                    b.HasIndex("RoomListRoomId");

                    b.ToTable("ReservationRoom", (string)null);
                });

            modelBuilder.Entity("Domain_Layer.Entities.MealPlanSeason", b =>
                {
                    b.HasOne("Domain_Layer.Entities.MealPlan", null)
                        .WithMany("MealplanSeasonList")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain_Layer.Entities.Reservation", b =>
                {
                    b.HasOne("Domain_Layer.Entities.MealPlan", "MealPlan")
                        .WithMany()
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("Domain_Layer.Entities.Room", b =>
                {
                    b.HasOne("Domain_Layer.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Domain_Layer.Entities.RoomSeason", b =>
                {
                    b.HasOne("Domain_Layer.Entities.RoomType", null)
                        .WithMany("RoomSeasonList")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservationRoom", b =>
                {
                    b.HasOne("Domain_Layer.Entities.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain_Layer.Entities.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomListRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain_Layer.Entities.MealPlan", b =>
                {
                    b.Navigation("MealplanSeasonList");
                });

            modelBuilder.Entity("Domain_Layer.Entities.RoomType", b =>
                {
                    b.Navigation("RoomSeasonList");
                });
#pragma warning restore 612, 618
        }
    }
}
